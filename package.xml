<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- do not use the "Type" attribute here, that one is only for
     generated package.xml files -->
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0">
  <name>SOAP</name>
  <summary>SOAP Client/Server for PHP</summary>
  <description>
    Implementation of SOAP protocol and services
  </description>
  <maintainers>
    <maintainer>
      <user>shane</user>
      <name>Shane Caraveo</name>
      <email>shane@php.net</email>
      <role>lead</role>
    </maintainer>
    <maintainer>
      <user>arnaud</user>
      <name>Arnaud Limbourg</name>
      <email>arnaud@php.net</email>
      <role>lead</role>
    </maintainer>
  </maintainers>
  <license>PHP License</license>
  <release>
    <state>beta</state>
    <version>0.8RC1</version>
    <date>2003-08-17</date>
    <notes>
    * timeout reporting on HTTP transmission (now returns an error)
    * typo in WSDL.php on a variable test
    * better error reporting of HTTP response
    * series of patches from Chris Coe, l=list of improvements follows
    * the new class SOAP_WSDL_ObjectParser does for class
objects what SOAP_WSDL_Parser does for WSDL files; it parses all the
information from any __dispatch_maps and __typedefs present into the array
structures in SOAP_WSDL. This enables type information to be correctly
serialised in SOAP server responses, using the already existing method
getSchemaType
    * namespace prefixes are no longer stored in lower-case
(strtolower()-ed) in array keys or values.
    * In Base.php and Server.php, the SOAP-ENC:arrayType attribute of
arrays that are user-defined array types in a WSDL file or __typedef, which are
themselves contained in one or more other user-defined array types, are now
serialised in such a way that does not cause a runtime exception in .NET SOAP
clients (SOAP_Base::_serialiseValue and SOAP_Server::getSchemaType were changed
and SOAP_Server::_getDeepestArrayType was added).
    * In WSDL.php, the WSDL-file parsing function parse() was renamed to
parseURL(). A new function parseObject() was added which takes a single object
or array of objects to parse into WSDL array data, a target namespace for the
types, a WSDL service name and an optional WSDL service documentation string.
    * the constructor of SOAP_WSDL was changed so that if a URL to a WSDL
file is NOT supplied, no attempt is made to parse it or set the service name.
Previously, creating an instance of SOAP_WSDL with no parameters would cause an
'unable to read local WSDL file' fault to be generated.
    *  Server.php, the addObjectWSDL() function was added. This takes
the same parameters as SOAP_WSDL::parseObject and is an interface to that
function. If no associated SOAP_WSDL object exists when this function is
called,
one is created; otherwise, objects' data is added to the existing SOAP_WSDL
object. SOAP_Server::bind was renamed to SOAP_Server::bindWSDL().
    * In Server.php, addObjectMap() was given two extra, optional
parameters - a WSDL service name and description (the name defaults to
'Default'),
and will call addObjectWSDL() automatically when called. Therefore the same
syntax used to create SOAP_Servers now can continue to be used, yet the WSDL
information will be created automatically.
    * In Base.php, a comparison in _multiArrayType was changed to enable
multi-dimensional arrays where one or more of the dimensions have a single
element to be correctly serialised.
    * Interop tests should be much better
    </notes>
    <filelist>
      <dir name="/" baseinstalldir="SOAP">
        <file role="php" name="Base.php"/>
        <file role="php" name="Client.php"/>
        <file role="php" name="Disco.php"/>
        <file role="php" name="Fault.php"/>
        <file role="php" name="Parser.php"/>
        <file role="php" name="Server.php"/>
        <file role="php" name="Transport.php"/>
        <file role="php" name="Value.php"/>
        <file role="php" name="WSDL.php"/>
        <dir name="example" role="doc">
          <file role="doc" name="attachment.php"/>
          <file role="doc" name="client.php"/>
          <file role="doc" name="com_client.php"/>
          <file role="doc" name="disco_server.php"/>
          <file role="doc" name="email_client.php"/>
          <file role="doc" name="email_gateway.php"/>
          <file role="doc" name="email_pop_gateway.php"/>
          <file role="doc" name="email_pop_server.php"/>
          <file role="doc" name="email_server.php"/>
          <file role="doc" name="example_server.php"/>
          <file role="doc" name="example_types.php"/>
          <file role="doc" name="server.php"/>
          <file role="doc" name="server2.php"/>
          <file role="doc" name="smtp.php"/>
          <file role="doc" name="stockquote.php"/>
          <file role="doc" name="tcp_client.php"/>
          <file role="doc" name="tcp_daemon.pl"/>
          <file role="doc" name="tcp_server.php"/>
          <file role="doc" name="wsdl_client.php"/>
          <dir name="amazon">
            <file role="doc" name="amazon.php"/>
            <file role="doc" name="amazon_soap.php"/>
            <file role="doc" name="amazon_modes.php"/>
            <file role="doc" name="amazon_types.php"/>
            <file role="doc" name="config.php.dist"/>
            <file role="doc" name="index.php"/>
            <file role="doc" name="modes.php"/>
          </dir>
        </dir>
        <dir name="tools">
          <file role="php" name="genproxy.php"/>
        </dir>
        <dir name="Transport">
          <file role="php" name="HTTP.php"/>
          <file role="php" name="SMTP.php"/>
          <file role="php" name="TCP.php"/>
        </dir>
        <dir name="Server">
          <file role="php" name="Email.php"/>
          <file role="php" name="Email_Gateway.php"/>
          <file role="php" name="TCP.php"/>
        </dir>
        <dir name="Type">
          <file role="php" name="dateTime.php"/>
          <file role="php" name="duration.php"/>
          <file role="php" name="hexBinary.php"/>
        </dir>
      </dir>
    </filelist>
    <deps>
      <dep type="php" rel="ge" version="4.1"/>
      <dep type="ext" rel="has">pcre</dep>
      <dep type="pkg" rel="has">Mail_Mime</dep>
      <dep type="pkg" rel="has">HTTP_Request</dep>
      <dep type="pkg" rel="has">Net_URL</dep>
      <dep type="pkg" rel="has">Net_DIME</dep>
    </deps>
  </release>
  <changelog>
  <release>
    <state>beta</state>
    <version>0.7.5</version>
    <date>2003-07-21</date>
    <notes>
      * http protocol was not recognised in WSDL.php (Michele Manzato, Freddy Vulto)
      * optional parameters to specify cache use and liftime in WDSL
        (suggested by Michele Manzato). Constants are kept for Backward Compatibility
      * Error handling in Server::callMethod (patch by Pavel Marenyuk)
      * Conformance to standard, removing the trailing slash for HTTP binding
      (many people reported this)
      * Left out old 0.7.3 version number in 0.7.4
    </notes>
  </release>
  <release>
    <state>beta</state>
    <version>0.7.4</version>
    <date>2003-06-30</date>
    <notes>
      Fixes when behind a proxy.
      Other bugfixes.
    </notes>
  </release>
  <release>
    <state>beta</state>
    <version>0.7.3</version>
    <date>2003-05-18</date>
    <notes>
    Several bugfixes.
    </notes>
  </release>
  <release>
    <state>beta</state>
    <version>0.7.2</version>
    <date>2003-04-01</date>
    <notes>
      New DISCO support for WSDL generation (Dmitri Vinogradov).
      New TCP Client/Server Protocol implementation (Shane Hanna).
      New method alias support for server classes (ie. use php keywords as soap function names).
      New method call overloading (SOAP_Server::setCallHandler)
      New cookie support for HTTP soap clients.
      Better support for alternate transport layers.
      Many fixes and patches.

      Incompatibility note: The client call method now expects the second
      argument to a reference.
    </notes>
  </release>
  <release>
    <state>beta</state>
    <version>0.7.1</version>
    <date>2002-12-01</date>
    <notes>
      Minor bug fixes over the 0.7.0 release.
      Support for the overload extension is currently
      dissabled until futher work can be done.
    </notes>
  </release>
  <release>
    <state>beta</state>
    <version>0.7.0</version>
    <date>2002-07-06</date>
    <notes>
      Includes minor API changes from 0.6.2, and some possible minor incompabitibilities with .6.2.
      Supports HTTP Proxy (SOAP_Client constructor
      takes 4th param of type array, SOAP_WSDL
      constructor takes 2nd param of type array, see HTTP_Request
      docs for proxy parameters).
      Client now returns objects instead of associative arrays
      Improved WSDL proxy generation.
      Server support for binding servers to wsdl (bind method)
      Server support for document/literal servers
      Interop tests are moved to SOAP_Interop module, available
      via CVS only.  Interop now supports Round 3 Group D tests.
    </notes>
  </release>
  <release>
    <state>beta</state>
    <version>0.6.2</version>
    <date>2002-07-06</date>
    <notes>
      This is the initial independent PEAR release.
    </notes>
  </release>
  </changelog>
</package>
